{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      video: {},\n      canvas: {},\n      captures: []\n    };\n  },\n  mounted() {\n    this.video = this.$refs.video;\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        this.video.srcObject = stream;\n        this.video.play();\n      });\n    }\n  },\n  methods: {\n    capture() {\n      this.canvas = this.$refs.canvas;\n      this.canvas.getContext('2d').drawImage(this.video, 0, 0, 500, 500);\n      this.captures.push(this.canvas.toDataURL('image/png'));\n      console.log(this.captures);\n    }\n  }\n};","map":{"version":3,"mappings":";AAkBE,eAAe;EACXA,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,MAAM,EAAE,CAAC,CAAC;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAM,GAAK;IACT,IAAI,CAACH,KAAI,GAAI,IAAI,CAACI,KAAK,CAACJ,KAAI;IAC5B,IAAIK,SAAS,CAACC,YAAW,IAAKD,SAAS,CAACC,YAAY,CAACC,YAAY,EAAE;MACjEF,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEP,KAAK,EAAE;MAAK,CAAC,CAAC,CAACQ,IAAI,CAACC,MAAK,IAAK;QAClE,IAAI,CAACT,KAAK,CAACU,SAAQ,GAAID,MAAK;QAC5B,IAAI,CAACT,KAAK,CAACW,IAAI,EAAC;MAClB,CAAC;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAM,GAAK;MACT,IAAI,CAACZ,MAAK,GAAI,IAAI,CAACG,KAAK,CAACH,MAAK;MAC9B,IAAI,CAACA,MAAM,CAACa,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC,IAAI,CAACf,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;MACjE,IAAI,CAACE,QAAQ,CAACc,IAAI,CAAC,IAAI,CAACf,MAAM,CAACgB,SAAS,CAAC,WAAW,CAAC;MACrDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,QAAQ;IAC3B;EACF;AACF","names":["data","video","canvas","captures","mounted","$refs","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","methods","capture","getContext","drawImage","push","toDataURL","console","log"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\SnapImage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div>\r\n      <video ref=\"video\" id=\"video\" width=\"500\" height=\"500\" autoplay></video>\r\n      <div>\r\n        <button color=\"info\" id=\"snap\" @click=\"capture()\">Snap Image</button>\r\n      </div>\r\n      <canvas ref=\"canvas\" id=\"canvas\" width=\"500\" height=\"500\"></canvas>\r\n      <ul>\r\n      <li class=\"capture\" v-for=\"c in captures\" v-bind:key=\"c.d\">\r\n        <img v-bind:src=\"c\" height=\"50\" />\r\n      </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n      data() {\r\n        return {\r\n          video: {},\r\n          canvas: {},\r\n          captures: []\r\n        }\r\n      },\r\n      mounted () {\r\n        this.video = this.$refs.video\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n          navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n            this.video.srcObject = stream\r\n            this.video.play()\r\n          })\r\n        }\r\n      },\r\n      methods: {\r\n        capture () {\r\n          this.canvas = this.$refs.canvas\r\n          this.canvas.getContext('2d').drawImage(this.video, 0, 0, 500, 500)\r\n          this.captures.push(this.canvas.toDataURL('image/png'))\r\n          console.log(this.captures)\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style>\r\n#canvas {\r\n  display: none;\r\n}\r\n.capture {\r\n  /* display: inline; */\r\n  padding: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}