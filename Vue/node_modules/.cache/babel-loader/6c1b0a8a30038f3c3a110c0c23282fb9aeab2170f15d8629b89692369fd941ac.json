{"ast":null,"code":"export default {\n  props: ['results'],\n  data() {\n    return {\n      ratio: 1,\n      dx: 0,\n      dy: 0,\n      viewport: '0 0 500 500',\n      isMove: false,\n      beforeMouseX: null,\n      beforeMouseY: null,\n      selectIdx: 0,\n      radius: window.innerWidth / 150,\n      coords: [],\n      stroke: 'black',\n      field_w: window.innerWidth * 0.6,\n      field_h: window.innerWidth * 0.39,\n      weightNum: 5,\n      canvas: null,\n      pen_color: \"black\",\n      context: null,\n      canvasMode: 'penBlack'\n    };\n  },\n  watch: {\n    results: function () {\n      this.coords = this.results;\n      for (var i = 0; i < this.coords.length; i++) {\n        this.context.beginPath();\n        this.context.arc(parseInt(this.coords[i].x * field_w / 115), parseInt(this.coords[i].y * field_h / 75), this.radius, 0, 2 * Math.PI);\n        this.context.fillStyle = this.coords[i].color;\n        this.context.fill();\n      }\n    }\n  },\n  // マウス操作関連\n  mounted() {\n    console.log('MOUNT LISTENER ON');\n    console.log(this.field_w);\n    console.log(this.field_h);\n    document.addEventListener('mouseup', this.mouseUp);\n    document.addEventListener('mousemove', this.mouseMove);\n    this.canvas = document.querySelector('#myCanvas');\n    this.context = this.canvas.getContext('2d');\n    this.context.lineCap = 'round';\n    this.context.lineCap = 'round';\n    // this.canvas.width = 700\n    // this.canvas.height = 600\n    this.canvas.width = this.field_w;\n    this.canvas.height = this.field_h;\n    this.context.lineWidth = this.weightNum;\n    this.context.strokeStyle = this.color;\n  },\n  beforeUnmount() {\n    // beforeDestroy () {\n    console.log('MOUNT LISTENER OFF');\n    document.removeEventListener('mouseup', this.mouseUp);\n    document.removeEventListener('mousemove', this.mouseMove);\n  },\n  methods: {\n    // 図形を動かすフラグを立てる\n    move(e, i) {\n      this.isMove = true;\n      this.selectIdx = i;\n      e.preventDefault();\n    },\n    // マウスのクリックが終わった段階で初期化\n    mouseUp(e) {\n      this.isMove = false;\n      this.beforeMouseX = null;\n      this.beforeMouseY = null;\n      e.preventDefault();\n    },\n    // move中は前回まで動かした差分を取りながら座標を変化させていく\n    mouseMove(e) {\n      if (!this.isMove) return;\n      var mouseX = e.offsetX * this.ratio + this.dx;\n      var mouseY = e.offsetY * this.ratio + this.dy;\n      var dx = 0;\n      var dy = 0;\n      if (this.beforeMouseX && this.beforeMouseY) {\n        dx = mouseX - this.beforeMouseX;\n        dy = mouseY - this.beforeMouseY;\n      }\n      this.beforeMouseX = mouseX;\n      this.beforeMouseY = mouseY;\n      var tempX = dx + Number(this.coords[this.selectIdx].x);\n      var tempY = dy + Number(this.coords[this.selectIdx].y);\n      //var tempX = dx + Number(this.polygons[this.selectIdx].x)\n      //var tempY = dy + Number(this.polygons[this.selectIdx].y)\n      if (tempX > 0) this.coords[this.selectIdx].x = tempX;\n      if (tempY > 0) this.coords[this.selectIdx].y = tempY;\n      e.preventDefault();\n    },\n    // 描画\n    draw: function (e) {\n      // let x = e.layerX\n      // let y = e.layerY\n      let x = e.offsetX;\n      let y = e.offsetY;\n      if (!this.isDrag) return;\n      this.context.lineTo(x, y);\n      this.context.stroke();\n    },\n    // 描画開始（mousedown）\n    dragStart: function (e) {\n      // let x = e.layerX\n      // let y = e.layerY\n      let x = e.offsetX;\n      let y = e.offsetY;\n      this.context.beginPath();\n      this.context.lineTo(x, y);\n      this.context.stroke();\n      this.isDrag = true;\n      // this.context.getImageData(0, 0, this.canvas.width, this.canvas.height)\n    },\n\n    // 描画終了（mouseup, mouseout）\n    dragEnd: function () {\n      this.context.closePath();\n      this.isDrag = false;\n    },\n    clear: function () {\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    },\n    // ペンモード（黒）\n    penBlack: function () {\n      // カーソル変更\n      this.canvasMode = 'penBlack';\n\n      // 描画設定\n      this.context.lineCap = 'round';\n      this.context.lineJoin = 'round';\n      this.context.lineWidth = 5;\n      this.context.strokeStyle = '#000000';\n    },\n    // ペンモード（赤）\n    penRed: function () {\n      // カーソル変更\n      this.canvasMode = 'penRed';\n\n      // 描画設定\n      this.context.lineCap = 'round';\n      this.context.lineJoin = 'round';\n      this.context.lineWidth = 5;\n      this.context.strokeStyle = '#FF0000';\n    },\n    // ペンモード（青）\n    penBlue: function () {\n      // カーソル変更\n      this.canvasMode = 'penBlue';\n\n      // 描画設定\n      this.context.lineCap = 'round';\n      this.context.lineJoin = 'round';\n      this.context.lineWidth = 5;\n      this.context.strokeStyle = '#0000FF';\n    },\n    // 消しゴムモード\n    eraser: function () {\n      // カーソル変更\n      this.canvasMode = 'eraser';\n\n      // 描画設定\n      this.context.lineCap = 'square';\n      this.context.lineJoin = 'square';\n      this.context.lineWidth = 30;\n      this.context.strokeStyle = '#FFFFFF';\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["props","data","ratio","dx","dy","viewport","isMove","beforeMouseX","beforeMouseY","selectIdx","radius","window","innerWidth","coords","stroke","field_w","field_h","weightNum","canvas","pen_color","context","canvasMode","watch","results","i","length","beginPath","arc","parseInt","x","y","Math","PI","fillStyle","color","fill","mounted","console","log","document","addEventListener","mouseUp","mouseMove","querySelector","getContext","lineCap","width","height","lineWidth","strokeStyle","beforeUnmount","removeEventListener","methods","move","e","preventDefault","mouseX","offsetX","mouseY","offsetY","tempX","Number","tempY","draw","isDrag","lineTo","dragStart","dragEnd","closePath","clear","clearRect","penBlack","lineJoin","penRed","penBlue","eraser"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\CanvasField.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- SVG定義 -->\r\n\r\n    <!-- <div class=\"board\"> -->\r\n      <!-- <div class=\"board-area\"> -->\r\n        <canvas id=\"myCanvas\" :class=\"{eraser: canvasMode === 'eraser'}\" ref=\"myCanvas\" @mousedown=\"dragStart\" @mouseup=\"dragEnd\" @mouseout=\"dragEnd\" @mousemove=\"draw\">\r\n      <!-- <svg class=\"circle\"> -->\r\n          <!-- <arc v-for=\"(r, idx) in coords\" :key=\"idx\"\r\n            @mousedown=\"move($event, idx)\"\r\n            :fill=\"r.color\" :stroke=\"stroke\"\r\n            :x=\"parseInt(r.x * field_w / 115)\" :y=\"parseInt(r.y * field_h / 75)\" :r=\"radius\">\r\n          </arc> -->\r\n      <!-- </svg> -->\r\n        </canvas>\r\n        <div id=\"tool-area\">\r\n          <button id=\"pen-black-button\" @click=\"penBlack\">ペン（黒）</button>\r\n          <button id=\"pen-red-button\" @click=\"penRed\">ペン（赤）</button>\r\n          <button id=\"pen-blue-button\" @click=\"penBlue\">ペン（青）</button>\r\n          <button id=\"eraser-button\" @click=\"eraser\" >消しゴム</button>\r\n          <button id=\"clear-button\" @click=\"clear\">クリア</button>\r\n        </div>\r\n      <!-- </div> -->\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  props: ['results'],\r\n  data () {\r\n    return {\r\n      ratio: 1,\r\n      dx: 0,\r\n      dy: 0,\r\n      viewport: '0 0 500 500',\r\n      isMove: false,\r\n      beforeMouseX: null,\r\n      beforeMouseY: null,\r\n      selectIdx: 0,\r\n      radius: window.innerWidth / 150,\r\n      coords: [],\r\n      stroke: 'black',\r\n      field_w: window.innerWidth * 0.6,\r\n      field_h: window.innerWidth * 0.39,\r\n\r\n      weightNum: 5,\r\n      canvas: null,\r\n      pen_color: \"black\",\r\n      context: null,\r\n      canvasMode: 'penBlack',\r\n    } \r\n  },\r\n  watch: {\r\n    results: function() {\r\n      this.coords = this.results\r\n\r\n      for (var i = 0; i < this.coords.length; i++) {\r\n        this.context.beginPath()\r\n        this.context.arc(parseInt(this.coords[i].x * field_w / 115), parseInt(this.coords[i].y * field_h / 75), this.radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.coords[i].color;\r\n        this.context.fill();\r\n      }\r\n    }\r\n\r\n  },  \r\n  // マウス操作関連\r\n  mounted () {\r\n    console.log('MOUNT LISTENER ON')\r\n    console.log(this.field_w)\r\n    console.log(this.field_h)\r\n    document.addEventListener('mouseup', this.mouseUp)\r\n    document.addEventListener('mousemove', this.mouseMove)\r\n\r\n    this.canvas = document.querySelector('#myCanvas')\r\n    this.context = this.canvas.getContext('2d')\r\n    this.context.lineCap = 'round'\r\n    this.context.lineCap = 'round'\r\n    // this.canvas.width = 700\r\n    // this.canvas.height = 600\r\n    this.canvas.width = this.field_w\r\n    this.canvas.height = this.field_h\r\n    this.context.lineWidth = this.weightNum\r\n    this.context.strokeStyle = this.color\r\n  },\r\n  beforeUnmount () {\r\n  // beforeDestroy () {\r\n    console.log('MOUNT LISTENER OFF')\r\n    document.removeEventListener('mouseup', this.mouseUp)\r\n    document.removeEventListener('mousemove', this.mouseMove)\r\n  },\r\n  methods: {\r\n\r\n    // 図形を動かすフラグを立てる\r\n    move (e, i) {\r\n      this.isMove = true\r\n      this.selectIdx = i\r\n      e.preventDefault()\r\n    },\r\n    // マウスのクリックが終わった段階で初期化\r\n    mouseUp (e) {\r\n      this.isMove = false\r\n      this.beforeMouseX = null\r\n      this.beforeMouseY = null\r\n      e.preventDefault()\r\n    },\r\n    // move中は前回まで動かした差分を取りながら座標を変化させていく\r\n    mouseMove (e) {\r\n      if (!this.isMove) return\r\n      var mouseX = e.offsetX * this.ratio + this.dx\r\n      var mouseY = e.offsetY * this.ratio + this.dy\r\n      var dx = 0\r\n      var dy = 0\r\n      if (this.beforeMouseX && this.beforeMouseY) {\r\n          dx = mouseX - this.beforeMouseX\r\n          dy = mouseY - this.beforeMouseY\r\n      }\r\n      this.beforeMouseX = mouseX\r\n      this.beforeMouseY = mouseY\r\n      var tempX = dx + Number(this.coords[this.selectIdx].x)\r\n      var tempY = dy + Number(this.coords[this.selectIdx].y)\r\n      //var tempX = dx + Number(this.polygons[this.selectIdx].x)\r\n      //var tempY = dy + Number(this.polygons[this.selectIdx].y)\r\n      if (tempX > 0) this.coords[this.selectIdx].x = tempX\r\n      if (tempY > 0) this.coords[this.selectIdx].y = tempY\r\n      e.preventDefault()\r\n    },\r\n    // 描画\r\n    draw :function(e) {\r\n      // let x = e.layerX\r\n      // let y = e.layerY\r\n      let x = e.offsetX\r\n      let y = e.offsetY\r\n      if(!this.isDrag) return;\r\n      this.context.lineTo(x, y);\r\n      this.context.stroke();\r\n    },\r\n    // 描画開始（mousedown）\r\n    dragStart:function(e) {\r\n      // let x = e.layerX\r\n      // let y = e.layerY\r\n      let x = e.offsetX\r\n      let y = e.offsetY\r\n      this.context.beginPath();\r\n      this.context.lineTo(x, y);\r\n      this.context.stroke();\r\n      this.isDrag = true;\r\n      // this.context.getImageData(0, 0, this.canvas.width, this.canvas.height)\r\n\r\n    },\r\n    // 描画終了（mouseup, mouseout）\r\n    dragEnd: function() {\r\n      this.context.closePath();\r\n      this.isDrag = false;\r\n    },\r\n    clear: function() {\r\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n    // ペンモード（黒）\r\n  penBlack: function(){\r\n    // カーソル変更\r\n    this.canvasMode = 'penBlack'\r\n \r\n    // 描画設定\r\n    this.context.lineCap = 'round';\r\n    this.context.lineJoin = 'round';\r\n    this.context.lineWidth = 5;\r\n    this.context.strokeStyle = '#000000';\r\n  },\r\n  // ペンモード（赤）\r\n  penRed: function(){\r\n    // カーソル変更\r\n    this.canvasMode = 'penRed'\r\n \r\n    // 描画設定\r\n    this.context.lineCap = 'round';\r\n    this.context.lineJoin = 'round';\r\n    this.context.lineWidth = 5;\r\n    this.context.strokeStyle = '#FF0000';\r\n  },\r\n  // ペンモード（青）\r\n  penBlue: function(){\r\n    // カーソル変更\r\n    this.canvasMode = 'penBlue'\r\n \r\n    // 描画設定\r\n    this.context.lineCap = 'round';\r\n    this.context.lineJoin = 'round';\r\n    this.context.lineWidth = 5;\r\n    this.context.strokeStyle = '#0000FF';\r\n  },\r\n    // 消しゴムモード\r\n    eraser: function() {\r\n      // カーソル変更\r\n      this.canvasMode = 'eraser'\r\n \r\n      // 描画設定\r\n      this.context.lineCap = 'square';\r\n      this.context.lineJoin = 'square';\r\n      this.context.lineWidth = 30;\r\n      this.context.strokeStyle = '#FFFFFF';\r\n    }\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  text-align: center;\r\n}\r\n\r\n#myCanvas {\r\n border: 1px solid #000000;\r\n /* width: 60%;\r\n height: 250%; */\r\n\r\n background-size: contain;\r\n background-image: url('~@/assets/field.jpg');\r\n background-repeat:no-repeat;\r\n}\r\n\r\n.eraser {\r\n  cursor: url(../assets/eraser.png) 15 15,auto;\r\n}\r\n/* .board {\r\n  /* background-color: silver; */\r\n  /* height: 1000px; */\r\n/* } */\r\n\r\n/* .circle {\r\n  z-index: 10;\r\n} */\r\n\r\n/* .board-area {\r\n  /* width : 60%; */\r\n  /* height: 200%; */\r\n/* }  */\r\n\r\n/* svg {\r\n  width : 60%;\r\n  height: 200%;\r\n  background-size: contain;\r\n  /* background: url('~@/assets/field.jpg'); */\r\n  /* background-image: url('~@/assets/field.jpg');\r\n  background-repeat:no-repeat;\r\n  padding-bottom: 40%;\r\n} */ \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}