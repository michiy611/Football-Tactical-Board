{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-66939c3f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  for: \"input-video\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  controls: \"\",\n  id: \"video\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"thumbnail-list\"\n};\nconst _hoisted_6 = [\"src\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString($data.isLoading ? '読み込み中...' : '動画を選択'), 1 /* TEXT */), _createElementVNode(\"input\", {\n    id: \"input-video\",\n    type: \"file\",\n    accept: \"video/mp4,video/x-m4v\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), $data.src ? (_openBlock(), _createElementBlock(\"video\", _hoisted_3, [_createElementVNode(\"source\", {\n    src: $data.src,\n    type: \"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\"\n  }, null, 8 /* PROPS */, _hoisted_4)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_TransitionGroup, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.thumbnails, (thumbnail, index) => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        class: _normalizeClass([\"thumbnail\", {\n          active: index === _ctx.selected\n        }]),\n        key: 'thumbnail' + index,\n        src: thumbnail,\n        onClick: $event => _ctx.selected = index\n      }, null, 10 /* CLASS, PROPS */, _hoisted_6);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" <input type=\\\"button\\\" value=\\\"一時停止\\\" @click=\\\"setCurrentTime()\\\"/> \"), _createElementVNode(\"button\", {\n    id: \"snap\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.setCurrentTime())\n  }, \"このシーンをインポート\")]);\n}","map":{"version":3,"mappings":";;;EACOA,EAAE,EAAC;AAAK;;EACJC,GAAG,EAAC;AAAa;;;EAEjBC,QAAQ,EAAR,EAAQ;EAAYF,EAAE,EAAC;;;;EAGzBG,KAAK,EAAC;AAAgB;;;uBAN7BC,oBAoBM,OApBNC,UAoBM,GAnBJC,oBAAsE,SAAtEC,UAAsE,mBAA1CC,eAAS,yCACrCF,oBAA8F;IAAvFN,EAAE,EAAC,aAAa;IAACS,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,uBAAuB;IAAEC,QAAM,yCAAEC,+DAAgB;qCACtEJ,SAAG,kBAAzBJ,oBAEQ,SAFRS,UAEQ,GADNP,oBAAqE;IAA5DQ,GAAG,EAAEN,SAAG;IAAEC,IAAI,EAAC;8EAE1BH,oBAWM,OAXNS,UAWM,GAVJC,aASmBC;IATDC,IAAI,EAAC;EAAM;sBAGzB,MAAwC,oBAF1Cd,oBAOCe,6BAL8BC,eAAU,GAA/BC,SAAS,EAAEC,KAAK;2BAF1BlB,oBAOC;QANCD,KAAK,mBAAC,WAAW;UAAAoB,QAICD,KAAK,KAAKF;QAAQ;QAFnCI,GAAG,gBAAgBF,KAAK;QACxBR,GAAG,EAAEO,SAAS;QAEdI,OAAK,YAAEL,aAAQ,GAAGE;;;;;QAIzBI,4FAAsE,EACtEpB,oBAAgE;IAAxDN,EAAE,EAAC,MAAM;IAAEyB,OAAK,sCAAEb,uBAAc;KAAI,aAAW","names":["id","for","controls","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","type","accept","onChange","$options","_hoisted_3","src","_hoisted_5","_createVNode","_TransitionGroup","name","_Fragment","_ctx","thumbnail","index","active","key","onClick","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\CreateImage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <label for=\"input-video\">{{ isLoading ? '読み込み中...' : '動画を選択'}}</label>\r\n    <input id=\"input-video\" type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n    <video controls v-if=\"src\" id=\"video\">\r\n      <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n    </video>\r\n    <div class=\"thumbnail-list\">\r\n      <transition-group name=\"fade\">\r\n        <img \r\n          class=\"thumbnail\"\r\n          v-for=\"(thumbnail, index) in thumbnails\" \r\n          :key=\"'thumbnail' + index\" \r\n          :src=\"thumbnail\"\r\n          :class=\"{ active: index === selected }\"\r\n          @click=\"selected = index\"\r\n        >\r\n      </transition-group>\r\n    </div>\r\n    <!-- <input type=\"button\" value=\"一時停止\" @click=\"setCurrentTime()\"/> -->\r\n    <button id=\"snap\" @click=\"setCurrentTime()\">このシーンをインポート</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      src: null,\r\n      image: [],\r\n      time: 0,\r\n      isLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileSelect(event) {\r\n      // reset data\r\n      this.src = null\r\n      this.thumbnails = []\r\n      this.selected = 0\r\n      \r\n      // varidate file\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n\r\n      // read file\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        this.createThumbnails(this.src)\r\n        this.isLoading = false\r\n      }\r\n      reader.readAsDataURL(file)\r\n      this.isLoading = true\r\n    },\r\n    // 動画を停止してその時点の秒数を取得\r\n    setCurrentTime() {\r\n      this.image = []\r\n      const canvas = document.createElement('canvas')\r\n      const context = canvas.getContext('2d')\r\n      const video = document.getElementById(\"video\")\r\n\r\n      canvas.width = video.videoWidth\r\n      canvas.height = video.videoHeight\r\n      this.time = video.currentTime\r\n      // console.log(Math.ceil(this.time))\r\n      video.pause()\r\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n      this.image.push(canvas.toDataURL('image/jpeg'))\r\n    },\r\n    // createThumbnails(src) {\r\n    //   const video = document.createElement('video')\r\n    //   const canvas = document.createElement('canvas')\r\n    //   const context = canvas.getContext('2d')\r\n\r\n    //   // set canvas\r\n    //   video.onloadeddata = () => {\r\n    //     canvas.width = video.videoWidth\r\n    //     canvas.height = video.videoHeight\r\n    //     video.currentTime = 0\r\n    //   }\r\n\r\n    //   // console.log(video.currentTime)\r\n\r\n    //   // capture thumbnail\r\n    //   video.onseeked = () => {\r\n    //     if(video.currentTime < video.duration ){\r\n    //       if (Math.ceil(this.time) == video.currentTime) {\r\n    //         context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n    //         this.thumbnails.push(canvas.toDataURL('image/jpeg'))\r\n    //       }\r\n    //       video.currentTime += Math.ceil(video.duration / 4)\r\n    //     }\r\n    //   }\r\n      \r\n    //   // set video source\r\n    //   video.src = src\r\n    //   video.load()\r\n    // }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.input-area {\r\n  background: #20262E;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  transition: all 0.2s;\r\n}\r\n\r\ninput {\r\n  display: none;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  color: #ccc;\r\n  border: 2px dashed #ccc;\r\n  background: #eee;\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease-out;\r\n}\r\n\r\nlabel:hover {\r\n  background: #fafafa;\r\n  padding: 20px 10px;\r\n}\r\n\r\nvideo {\r\n  display: block;\r\n  max-width: 300px;\r\n  margin: 10px auto;\r\n}\r\n\r\n.thumbnail {\r\n  width: 20%;\r\n  height: 20%;\r\n  box-sizing: border-box;\r\n  border: 4px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.thumbnail-list.active {\r\n  border: 4px solid #06c;\r\n}\r\n\r\n.thumbnail-list:not(.active):hover {\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n}\r\n\r\n.fade-enter-active {\r\n  transition: all 0.4s;\r\n}\r\n\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}