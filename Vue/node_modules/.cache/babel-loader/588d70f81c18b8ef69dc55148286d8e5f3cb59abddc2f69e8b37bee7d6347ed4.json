{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"imgContent\"\n};\nconst _hoisted_2 = {\n  class: \"imagePreview\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 0,\n  controls: \"\"\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: _ctx.uploadedImage,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \"video/mp4,video/x-m4v\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" <input type=\\\"file\\\" class=\\\"file_input\\\" name=\\\"photo\\\" @change=\\\"onFileChange\\\"  accept=\\\"image/*\\\" /> \"), _createCommentVNode(\" <button @click='onUploadImage'>画像判定してくだちい・・・</button> \"), $data.src ? (_openBlock(), _createElementBlock(\"video\", _hoisted_4, [_createElementVNode(\"source\", {\n    src: $data.src,\n    type: \"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\"\n  }, null, 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAc;;;;EAMlBC,QAAQ,EAAR;;;;uBARXC,oBAYM,cAXJC,oBAUM,OAVNC,UAUM,GATJD,oBAEM,OAFNE,UAEM,GADJF,oBAAgD;IAA1CG,GAAG,EAAEC,kBAAa;IAAEC,KAAmB,EAAnB;MAAA;IAAA;yCAE5BL,oBAA6E;IAAtEM,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,uBAAuB;IAAEC,QAAM,yCAAEC,+DAAgB;qCAC3EC,iIAAuG,EACvGA,8EAA8D,EACxCC,SAAG,kBAAzBZ,oBAEQ,SAFRa,UAEQ,GADNZ,oBAAqE;IAA5DG,GAAG,EAAEQ,SAAG;IAAEL,IAAI,EAAC","names":["class","controls","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","src","_ctx","style","type","accept","onChange","$options","_createCommentVNode","$data","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\DockerEXP2\\frontend\\src\\components\\UploadMovie.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"imgContent\">\r\n      <div class=\"imagePreview\">\r\n        <img :src=\"uploadedImage\" style=\"width:100%;\" />\r\n      </div>\r\n      <input type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n      <!-- <input type=\"file\" class=\"file_input\" name=\"photo\" @change=\"onFileChange\"  accept=\"image/*\" /> -->\r\n      <!-- <button @click='onUploadImage'>画像判定してくだちい・・・</button> -->\r\n      <video controls v-if=\"src\">\r\n        <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n      </video>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://127.0.0.1:5000'\r\nexport default {\r\n  data () {\r\n    return {\r\n      src: ''\r\n    }\r\n  },\r\n  methods: {\r\n    // ファイルのチェックと読み込み\r\n    handleFileSelect(event) {  \r\n      // ファイルのチェック\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n      // ファイルの読み込み\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        // this.createThumbnails(this.src)\r\n      }\r\n      reader.readAsDataURL(file)\r\n    },\r\n    // 選択した画像を反映\r\n    // onFileChange (e) {\r\n    //   let files = e.target.files || e.dataTransfer.files\r\n    //   this.createImage(files[0])\r\n    // },\r\n    // アップロードした画像を表示\r\n    // createImage (file) {\r\n    //   let reader = new FileReader()\r\n    //   reader.onload = (e) => {\r\n    //     this.uploadedImage = e.target.result\r\n    //   }\r\n    //   reader.readAsDataURL(file)\r\n    // },\r\n    // 画像をサーバーへアップロード\r\n    onUploadImage () {\r\n      var params = new FormData()\r\n      params.append('video', this.uploadedImage)\r\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\r\n      axios.post(`${API_URL}/classification`, params).then(function (response) {\r\n        console.log(response)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}