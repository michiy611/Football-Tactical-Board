{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      video: {},\n      canvas: {},\n      captures: []\n    };\n  },\n  mounted() {\n    this.video = this.$refs.video;\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        this.video.srcObject = stream;\n        this.video.play();\n      });\n    }\n  },\n  methods: {\n    // ファイルのチェックと読み込み\n    handleFileSelect(event) {\n      // ファイルのチェック\n      const file = event.target.files[0];\n      if (!file || !file.type.match('video/*')) return;\n      // ファイルの読み込み\n      const reader = new FileReader();\n      reader.onload = evt => {\n        this.src = evt.target.result;\n        this.createThumbnails(this.src);\n        this.isLoading = false;\n      };\n      reader.readAsDataURL(file);\n      this.isLoading = true;\n    },\n    capture() {\n      this.canvas = this.$refs.canvas;\n      this.canvas.getContext('2d').drawImage(this.video, 0, 0, 500, 500);\n      this.captures.push(this.canvas.toDataURL('image/png'));\n      console.log(this.captures);\n    }\n  }\n};","map":{"version":3,"mappings":";AAsBE,eAAe;EACXA,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,MAAM,EAAE,CAAC,CAAC;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAM,GAAK;IACT,IAAI,CAACH,KAAI,GAAI,IAAI,CAACI,KAAK,CAACJ,KAAI;IAC5B,IAAIK,SAAS,CAACC,YAAW,IAAKD,SAAS,CAACC,YAAY,CAACC,YAAY,EAAE;MACjEF,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEP,KAAK,EAAE;MAAK,CAAC,CAAC,CAACQ,IAAI,CAACC,MAAK,IAAK;QAClE,IAAI,CAACT,KAAK,CAACU,SAAQ,GAAID,MAAK;QAC5B,IAAI,CAACT,KAAK,CAACW,IAAI,EAAC;MAClB,CAAC;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,gBAAgB,CAACC,KAAK,EAAE;MACtB;MACA,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACF,IAAG,IAAK,CAACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;MAC1C;MACA,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAKC,GAAG,IAAK;QACvB,IAAI,CAACC,GAAE,GAAID,GAAG,CAACP,MAAM,CAACS,MAAK;QAC3B,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACF,GAAG;QAC9B,IAAI,CAACG,SAAQ,GAAI,KAAI;MACvB;MACAP,MAAM,CAACQ,aAAa,CAACb,IAAI;MACzB,IAAI,CAACY,SAAQ,GAAI,IAAG;IACtB,CAAC;IACDE,OAAM,GAAK;MACT,IAAI,CAAC5B,MAAK,GAAI,IAAI,CAACG,KAAK,CAACH,MAAK;MAC9B,IAAI,CAACA,MAAM,CAAC6B,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC/B,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;MACjE,IAAI,CAACE,QAAQ,CAAC8B,IAAI,CAAC,IAAI,CAAC/B,MAAM,CAACgC,SAAS,CAAC,WAAW,CAAC;MACrDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,QAAQ;IAC3B;EACF;AACF","names":["data","video","canvas","captures","mounted","$refs","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","methods","handleFileSelect","event","file","target","files","type","match","reader","FileReader","onload","evt","src","result","createThumbnails","isLoading","readAsDataURL","capture","getContext","drawImage","push","toDataURL","console","log"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\SnapImage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div>\r\n      <div class=\"input-area\">\r\n        <label for=\"input-video\">{{ isLoading ? '読み込み中...' : '動画を選択'}}</label>\r\n        <input id=\"input-video\" type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n        <video controls v-if=\"src\" @click=\"clip\">\r\n          <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n        </video>\r\n        <button id=\"snap\" @click=\"capture()\">このシーンをインポート</button>\r\n        <canvas ref=\"canvas\" id=\"canvas\" width=\"500\" height=\"500\"></canvas>\r\n        <ul>\r\n        <li class=\"capture\" v-for=\"c in captures\" v-bind:key=\"c.d\">\r\n          <img v-bind:src=\"c\" height=\"50\" />\r\n        </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n      data() {\r\n        return {\r\n          video: {},\r\n          canvas: {},\r\n          captures: []\r\n        }\r\n      },\r\n      mounted () {\r\n        this.video = this.$refs.video\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n          navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n            this.video.srcObject = stream\r\n            this.video.play()\r\n          })\r\n        }\r\n      },\r\n      methods: {\r\n        // ファイルのチェックと読み込み\r\n        handleFileSelect(event) {  \r\n          // ファイルのチェック\r\n          const file = event.target.files[0]\r\n          if (!file || !file.type.match('video/*')) return\r\n          // ファイルの読み込み\r\n          const reader = new FileReader()\r\n          reader.onload = (evt) => {\r\n            this.src = evt.target.result\r\n            this.createThumbnails(this.src)\r\n            this.isLoading = false\r\n          }\r\n          reader.readAsDataURL(file)\r\n          this.isLoading = true\r\n        },\r\n        capture () {\r\n          this.canvas = this.$refs.canvas\r\n          this.canvas.getContext('2d').drawImage(this.video, 0, 0, 500, 500)\r\n          this.captures.push(this.canvas.toDataURL('image/png'))\r\n          console.log(this.captures)\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style>\r\n#canvas {\r\n  display: none;\r\n}\r\n.capture {\r\n  /* display: inline; */\r\n  padding: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}