{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"board\"\n};\nconst _hoisted_3 = {\n  class: \"board-area\"\n};\nconst _hoisted_4 = [\"onMousedown\", \"fill\", \"stroke\", \"cx\", \"cy\", \"r\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" SVG定義 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(), _createElementBlock(\"svg\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.coords, (r, idx) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: idx,\n      onMousedown: $event => $options.move($event, idx),\n      fill: r.color,\n      stroke: $data.stroke,\n      cx: parseInt(r.x * $data.field_w / 115),\n      cy: parseInt(r.y * $data.field_h / 75),\n      r: $data.radius\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))]))])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAGfA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAY;;;uBAJ3BC,oBAcM,OAdNC,UAcM,GAbJC,8BAAc,EAEdC,oBAUM,OAVNC,UAUM,GATJD,oBAQM,OARNE,UAQM,kBAPJL,oBAMM,iCALJA,oBAISM,6BAJkBC,YAAM,GAAjBC,CAAC,EAAEC,GAAG;yBAAtBT,oBAIS;MAJ2BU,GAAG,EAAED,GAAG;MACzCE,WAAS,YAAEC,aAAI,CAACC,MAAM,EAAEJ,GAAG;MAC3BK,IAAI,EAAEN,CAAC,CAACO,KAAK;MAAGC,MAAM,EAAET,YAAM;MAC9BU,EAAE,EAAEC,QAAQ,CAACV,CAAC,CAACW,CAAC,GAAGZ,aAAO;MAAUa,EAAE,EAAEF,QAAQ,CAACV,CAAC,CAACa,CAAC,GAAGd,aAAO;MAASC,CAAC,EAAED","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","$data","r","idx","key","onMousedown","$options","$event","fill","color","stroke","cx","parseInt","x","cy","y"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\PlayerCircle.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- SVG定義 -->\r\n\r\n    <div class=\"board\">\r\n      <div class=\"board-area\">\r\n        <svg>\r\n          <circle v-for=\"(r, idx) in coords\" :key=\"idx\"\r\n            @mousedown=\"move($event, idx)\"\r\n            :fill=\"r.color\" :stroke=\"stroke\"\r\n            :cx=\"parseInt(r.x * field_w / 115)\" :cy=\"parseInt(r.y * field_h / 75)\" :r=\"radius\">\r\n          </circle>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  props: ['results'],\r\n  data () {\r\n    return {\r\n      ratio: 1,\r\n      dx: 0,\r\n      dy: 0,\r\n      viewport: '0 0 500 500',\r\n      isMove: false,\r\n      beforeMouseX: null,\r\n      beforeMouseY: null,\r\n      selectIdx: 0,\r\n      radius: window.innerWidth / 150,\r\n      coords: [],\r\n      stroke: 'black',\r\n      field_w: window.innerWidth * 0.6,\r\n      field_h: window.innerWidth * 0.39,\r\n    } \r\n  },\r\n  watch: {\r\n    results: function() {\r\n      this.coords = this.results\r\n    }\r\n  },  \r\n  // マウス操作関連\r\n  mounted () {\r\n    console.log('MOUNT LISTENER ON')\r\n    console.log(this.field_w)\r\n    console.log(this.field_h)\r\n    document.addEventListener('mouseup', this.mouseUp)\r\n    document.addEventListener('mousemove', this.mouseMove)\r\n  },\r\n  beforeUnmount () {\r\n  // beforeDestroy () {\r\n    console.log('MOUNT LISTENER OFF')\r\n    document.removeEventListener('mouseup', this.mouseUp)\r\n    document.removeEventListener('mousemove', this.mouseMove)\r\n  },\r\n  methods: {\r\n\r\n    // 図形を動かすフラグを立てる\r\n    move (e, i) {\r\n      this.isMove = true\r\n      this.selectIdx = i\r\n      e.preventDefault()\r\n    },\r\n    // マウスのクリックが終わった段階で初期化\r\n    mouseUp (e) {\r\n      this.isMove = false\r\n      this.beforeMouseX = null\r\n      this.beforeMouseY = null\r\n      e.preventDefault()\r\n    },\r\n    // move中は前回まで動かした差分を取りながら座標を変化させていく\r\n    mouseMove (e) {\r\n      if (!this.isMove) return\r\n      var mouseX = e.offsetX * this.ratio + this.dx\r\n      var mouseY = e.offsetY * this.ratio + this.dy\r\n      var dx = 0\r\n      var dy = 0\r\n      if (this.beforeMouseX && this.beforeMouseY) {\r\n          dx = mouseX - this.beforeMouseX\r\n          dy = mouseY - this.beforeMouseY\r\n      }\r\n      this.beforeMouseX = mouseX\r\n      this.beforeMouseY = mouseY\r\n      var tempX = dx + Number(this.coords[this.selectIdx].x)\r\n      var tempY = dy + Number(this.coords[this.selectIdx].y)\r\n      //var tempX = dx + Number(this.polygons[this.selectIdx].x)\r\n      //var tempY = dy + Number(this.polygons[this.selectIdx].y)\r\n      if (tempX > 0) this.coords[this.selectIdx].x = tempX\r\n      if (tempY > 0) this.coords[this.selectIdx].y = tempY\r\n      e.preventDefault()\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  text-align: center;\r\n}\r\n\r\n.board {\r\n  /* background-color: silver; */\r\n  height: 700px;\r\n}\r\n\r\n.board-area {\r\n  /* width : 60%; */\r\n  height: 200%;\r\n}\r\n\r\nsvg {\r\n  width : 60%;\r\n  height: 200%;\r\n  background-size: contain;\r\n  /* background: url('~@/assets/field.jpg'); */\r\n  background-image: url('~@/assets/field.jpg');\r\n  background-repeat:no-repeat;\r\n  /* padding-bottom: 40%; */\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}