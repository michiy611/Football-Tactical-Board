{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      src: null,\n      thumbnails: [],\n      selected: 0,\n      time: 0,\n      isLoading: false\n    };\n  },\n  methods: {\n    handleFileSelect(event) {\n      // reset data\n      this.src = null;\n      this.thumbnails = [];\n      this.selected = 0;\n\n      // varidate file\n      const file = event.target.files[0];\n      if (!file || !file.type.match('video/*')) return;\n\n      // read file\n      const reader = new FileReader();\n      reader.onload = evt => {\n        this.src = evt.target.result;\n        this.createThumbnails(this.src);\n        this.isLoading = false;\n      };\n      reader.readAsDataURL(file);\n      this.isLoading = true;\n    },\n    setCurrentTime() {\n      const v = document.getElementById(\"video\");\n      v.currentTime;\n      v.pause();\n    },\n    createThumbnails(src) {\n      const video = document.createElement('video');\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n\n      // set canvas\n      video.onloadeddata = () => {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        video.currentTime = 0;\n      };\n\n      // console.log(video.currentTime)\n\n      // capture thumbnail\n      video.onseeked = () => {\n        if (video.currentTime < video.duration) {\n          context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n          this.thumbnails.push(canvas.toDataURL('image/jpeg'));\n          video.currentTime += Math.ceil(video.duration / 4);\n        } else {\n          context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n          this.thumbnails.push(canvas.toDataURL('image/jpeg'));\n        }\n      };\n\n      // set video source\n      video.src = src;\n      video.load();\n    }\n  }\n};","map":{"version":3,"mappings":";AA2BA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,CAAC;MACPC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgB,CAACC,KAAK,EAAE;MACtB;MACA,IAAI,CAACP,GAAE,GAAI,IAAG;MACd,IAAI,CAACC,UAAS,GAAI,EAAC;MACnB,IAAI,CAACC,QAAO,GAAI;;MAEhB;MACA,MAAMM,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACF,IAAG,IAAK,CAACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;;MAE1C;MACA,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAKC,GAAG,IAAK;QACvB,IAAI,CAAChB,GAAE,GAAIgB,GAAG,CAACP,MAAM,CAACQ,MAAK;QAC3B,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAClB,GAAG;QAC9B,IAAI,CAACI,SAAQ,GAAI,KAAI;MACvB;MACAS,MAAM,CAACM,aAAa,CAACX,IAAI;MACzB,IAAI,CAACJ,SAAQ,GAAI,IAAG;IACtB,CAAC;IACDgB,cAAc,GAAG;MACf,MAAMC,IAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO;MACzCF,CAAC,CAACG,WAAU;MACZH,CAAC,CAACI,KAAK,EAAC;IACV,CAAC;IACDP,gBAAgB,CAAClB,GAAG,EAAE;MACpB,MAAM0B,KAAI,GAAIJ,QAAQ,CAACK,aAAa,CAAC,OAAO;MAC5C,MAAMC,MAAK,GAAIN,QAAQ,CAACK,aAAa,CAAC,QAAQ;MAC9C,MAAME,OAAM,GAAID,MAAM,CAACE,UAAU,CAAC,IAAI;;MAEtC;MACAJ,KAAK,CAACK,YAAW,GAAI,MAAM;QACzBH,MAAM,CAACI,KAAI,GAAIN,KAAK,CAACO,UAAS;QAC9BL,MAAM,CAACM,MAAK,GAAIR,KAAK,CAACS,WAAU;QAChCT,KAAK,CAACF,WAAU,GAAI;MACtB;;MAEA;;MAEA;MACAE,KAAK,CAACU,QAAO,GAAI,MAAM;QACrB,IAAGV,KAAK,CAACF,WAAU,GAAIE,KAAK,CAACW,QAAO,EAAG;UACrCR,OAAO,CAACS,SAAS,CAACZ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACS,WAAW;UAClE,IAAI,CAAClC,UAAU,CAACsC,IAAI,CAACX,MAAM,CAACY,SAAS,CAAC,YAAY,CAAC;UACnDd,KAAK,CAACF,WAAU,IAAKiB,IAAI,CAACC,IAAI,CAAChB,KAAK,CAACW,QAAO,GAAI,CAAC;QACnD,OAAO;UACLR,OAAO,CAACS,SAAS,CAACZ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACS,WAAW;UAClE,IAAI,CAAClC,UAAU,CAACsC,IAAI,CAACX,MAAM,CAACY,SAAS,CAAC,YAAY,CAAC;QACrD;MACF;;MAEA;MACAd,KAAK,CAAC1B,GAAE,GAAIA,GAAE;MACd0B,KAAK,CAACiB,IAAI,EAAC;IACb;EACF;AACF","names":["data","src","thumbnails","selected","time","isLoading","methods","handleFileSelect","event","file","target","files","type","match","reader","FileReader","onload","evt","result","createThumbnails","readAsDataURL","setCurrentTime","v","document","getElementById","currentTime","pause","video","createElement","canvas","context","getContext","onloadeddata","width","videoWidth","height","videoHeight","onseeked","duration","drawImage","push","toDataURL","Math","ceil","load"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\CreateImage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <label for=\"input-video\">{{ isLoading ? '読み込み中...' : '動画を選択'}}</label>\r\n    <input id=\"input-video\" type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n    <video controls v-if=\"src\" id=\"video\">\r\n      <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n    </video>\r\n    <div class=\"thumbnail-list\">\r\n      <transition-group name=\"fade\">\r\n        <img \r\n          class=\"thumbnail\"\r\n          v-for=\"(thumbnail, index) in thumbnails\" \r\n          :key=\"'thumbnail' + index\" \r\n          :src=\"thumbnail\"\r\n          :class=\"{ active: index === selected }\"\r\n          @click=\"selected = index\"\r\n        >\r\n      </transition-group>\r\n    </div>\r\n    <!-- <input type=\"button\" value=\"一時停止\" @click=\"setCurrentTime()\"/> -->\r\n    <button id=\"snap\" @click=\"setCurrentTime()\">このシーンをインポート</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      src: null,\r\n      thumbnails: [],\r\n      selected: 0,\r\n      time: 0,\r\n      isLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileSelect(event) {\r\n      // reset data\r\n      this.src = null\r\n      this.thumbnails = []\r\n      this.selected = 0\r\n      \r\n      // varidate file\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n\r\n      // read file\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        this.createThumbnails(this.src)\r\n        this.isLoading = false\r\n      }\r\n      reader.readAsDataURL(file)\r\n      this.isLoading = true\r\n    },\r\n    setCurrentTime() {\r\n      const v = document.getElementById(\"video\")\r\n      v.currentTime\r\n      v.pause()\r\n    },\r\n    createThumbnails(src) {\r\n      const video = document.createElement('video')\r\n      const canvas = document.createElement('canvas')\r\n      const context = canvas.getContext('2d')\r\n\r\n      // set canvas\r\n      video.onloadeddata = () => {\r\n        canvas.width = video.videoWidth\r\n        canvas.height = video.videoHeight\r\n        video.currentTime = 0\r\n      }\r\n\r\n      // console.log(video.currentTime)\r\n\r\n      // capture thumbnail\r\n      video.onseeked = () => {\r\n        if(video.currentTime < video.duration ){\r\n          context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n          this.thumbnails.push(canvas.toDataURL('image/jpeg'))\r\n          video.currentTime += Math.ceil(video.duration / 4)\r\n        } else {\r\n          context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n          this.thumbnails.push(canvas.toDataURL('image/jpeg'))\r\n        }\r\n      }\r\n      \r\n      // set video source\r\n      video.src = src\r\n      video.load()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.input-area {\r\n  background: #20262E;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  transition: all 0.2s;\r\n}\r\n\r\ninput {\r\n  display: none;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  color: #ccc;\r\n  border: 2px dashed #ccc;\r\n  background: #eee;\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease-out;\r\n}\r\n\r\nlabel:hover {\r\n  background: #fafafa;\r\n  padding: 20px 10px;\r\n}\r\n\r\nvideo {\r\n  display: block;\r\n  max-width: 50%;\r\n  margin: 10px auto;\r\n}\r\n\r\n.thumbnail {\r\n  width: 20%;\r\n  height: 20%;\r\n  box-sizing: border-box;\r\n  border: 4px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.thumbnail-list.active {\r\n  border: 4px solid #06c;\r\n}\r\n\r\n.thumbnail-list:not(.active):hover {\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n}\r\n\r\n.fade-enter-active {\r\n  transition: all 0.4s;\r\n}\r\n\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}