{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:5000';\nexport default {\n  data() {\n    return {\n      src: ''\n    };\n  },\n  methods: {\n    // ファイルのチェックと読み込み\n    handleFileSelect(event) {\n      // ファイルのチェック\n      const file = event.target.files[0];\n      if (!file || !file.type.match('video/*')) return;\n      // ファイルの読み込み\n      const reader = new FileReader();\n      reader.onload = evt => {\n        this.src = evt.target.result;\n        // this.createThumbnails(this.src)\n      };\n\n      reader.readAsDataURL(file);\n    },\n    // 選択した画像を反映\n    // onFileChange (e) {\n    //   let files = e.target.files || e.dataTransfer.files\n    //   this.createImage(files[0])\n    // },\n    // アップロードした画像を表示\n    // createImage (file) {\n    //   let reader = new FileReader()\n    //   reader.onload = (e) => {\n    //     this.uploadedImage = e.target.result\n    //   }\n    //   reader.readAsDataURL(file)\n    // },\n    // 画像をサーバーへアップロード\n    onUploadImage() {\n      var params = new FormData();\n      params.append('video', this.src);\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\n      axios.post(`${API_URL}/classification`, params).then(function (response) {\n        console.log(response);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAM;AAExB,MAAMC,OAAM,GAAI,uBAAsB;AACtC,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACLC,GAAG,EAAE;IACP;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,gBAAgB,CAACC,KAAK,EAAE;MACtB;MACA,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACF,IAAG,IAAK,CAACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;MAC1C;MACA,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAKC,GAAG,IAAK;QACvB,IAAI,CAACZ,GAAE,GAAIY,GAAG,CAACP,MAAM,CAACQ,MAAK;QAC3B;MACF;;MACAJ,MAAM,CAACK,aAAa,CAACV,IAAI;IAC3B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAW,aAAY,GAAK;MACf,IAAIC,MAAK,GAAI,IAAIC,QAAQ,EAAC;MAC1BD,MAAM,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAClB,GAAG;MAC/B;MACAH,KAAK,CAACsB,IAAI,CAAE,GAAErB,OAAQ,iBAAgB,EAAEkB,MAAM,CAAC,CAACI,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACvEC,OAAO,CAACC,GAAG,CAACF,QAAQ;MACtB,CAAC;IACH;EACF;AACF","names":["axios","API_URL","data","src","methods","handleFileSelect","event","file","target","files","type","match","reader","FileReader","onload","evt","result","readAsDataURL","onUploadImage","params","FormData","append","post","then","response","console","log"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\DockerEXP2\\frontend\\src\\components\\UploadMovie.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"imgContent\">\r\n      <div class=\"imagePreview\">\r\n        <img :src=\"uploadedImage\" style=\"width:100%;\" />\r\n      </div>\r\n      <input type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n      <!-- <input type=\"file\" class=\"file_input\" name=\"photo\" @change=\"onFileChange\"  accept=\"image/*\" /> -->\r\n      <!-- <button @click='onUploadImage'>画像判定してくだちい・・・</button> -->\r\n      <video controls v-if=\"src\">\r\n        <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n      </video>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://127.0.0.1:5000'\r\nexport default {\r\n  data () {\r\n    return {\r\n      src: ''\r\n    }\r\n  },\r\n  methods: {\r\n    // ファイルのチェックと読み込み\r\n    handleFileSelect(event) {  \r\n      // ファイルのチェック\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n      // ファイルの読み込み\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        // this.createThumbnails(this.src)\r\n      }\r\n      reader.readAsDataURL(file)\r\n    },\r\n    // 選択した画像を反映\r\n    // onFileChange (e) {\r\n    //   let files = e.target.files || e.dataTransfer.files\r\n    //   this.createImage(files[0])\r\n    // },\r\n    // アップロードした画像を表示\r\n    // createImage (file) {\r\n    //   let reader = new FileReader()\r\n    //   reader.onload = (e) => {\r\n    //     this.uploadedImage = e.target.result\r\n    //   }\r\n    //   reader.readAsDataURL(file)\r\n    // },\r\n    // 画像をサーバーへアップロード\r\n    onUploadImage () {\r\n      var params = new FormData()\r\n      params.append('video', this.src)\r\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\r\n      axios.post(`${API_URL}/classification`, params).then(function (response) {\r\n        console.log(response)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}