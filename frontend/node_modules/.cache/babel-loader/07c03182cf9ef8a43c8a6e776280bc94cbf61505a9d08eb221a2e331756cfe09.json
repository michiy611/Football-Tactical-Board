{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:5000';\nexport default {\n  data() {\n    return {\n      src: '',\n      canvas: {},\n      image: '',\n      isLoading: false\n    };\n  },\n  methods: {\n    // ファイルのチェックと読み込み\n    handleFileSelect(event) {\n      // ファイルのチェック\n      const file = event.target.files[0];\n      if (!file || !file.type.match('video/*')) return;\n      // ファイルの読み込み\n      const reader = new FileReader();\n      reader.onload = evt => {\n        this.src = evt.target.result;\n        this.createThumbnails(this.src);\n        this.isLoading = false;\n      };\n      reader.readAsDataURL(file);\n      this.isLoading = true;\n    },\n    uploadImage() {\n      const video = document.createElement('video');\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n      this.image.push(canvas.toDataURL('image/jpeg'));\n    },\n    // 動画をサーバーへアップロード\n    onUploadMovie() {\n      var params = new FormData();\n      params.append('video', this.src);\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\n      axios.post(`${API_URL}/classification`, params).then(function (response) {\n        console.log(response);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAgBA,OAAOA,KAAI,MAAO,OAAM;AAExB,MAAMC,OAAM,GAAI,uBAAsB;AACtC,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,CAAC,CAAC;MACVC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,gBAAgB,CAACC,KAAK,EAAE;MACtB;MACA,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACF,IAAG,IAAK,CAACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;MAC1C;MACA,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAKC,GAAG,IAAK;QACvB,IAAI,CAACf,GAAE,GAAIe,GAAG,CAACP,MAAM,CAACQ,MAAK;QAC3B,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACjB,GAAG;QAC9B,IAAI,CAACG,SAAQ,GAAI,KAAI;MACvB;MACAS,MAAM,CAACM,aAAa,CAACX,IAAI;MACzB,IAAI,CAACJ,SAAQ,GAAI,IAAG;IACtB,CAAC;IACDgB,WAAW,GAAG;MACZ,MAAMC,KAAI,GAAIC,QAAQ,CAACC,aAAa,CAAC,OAAO;MAC5C,MAAMrB,MAAK,GAAIoB,QAAQ,CAACC,aAAa,CAAC,QAAQ;MAC9C,MAAMC,OAAM,GAAItB,MAAM,CAACuB,UAAU,CAAC,IAAI;MAEtCvB,MAAM,CAACwB,KAAI,GAAIL,KAAK,CAACM,UAAS;MAC9BzB,MAAM,CAAC0B,MAAK,GAAIP,KAAK,CAACQ,WAAU;MAEhCL,OAAO,CAACM,SAAS,CAACT,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACM,UAAU,EAAEN,KAAK,CAACQ,WAAW;MAClE,IAAI,CAAC1B,KAAK,CAAC4B,IAAI,CAAC7B,MAAM,CAAC8B,SAAS,CAAC,YAAY,CAAC;IAChD,CAAC;IACD;IACAC,aAAY,GAAK;MACf,IAAIC,MAAK,GAAI,IAAIC,QAAQ,EAAC;MAC1BD,MAAM,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACnC,GAAG;MAC/B;MACAH,KAAK,CAACuC,IAAI,CAAE,GAAEtC,OAAQ,iBAAgB,EAAEmC,MAAM,CAAC,CAACI,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACvEC,OAAO,CAACC,GAAG,CAACF,QAAQ;MACtB,CAAC;IACH;EACF;AACF","names":["axios","API_URL","data","src","canvas","image","isLoading","methods","handleFileSelect","event","file","target","files","type","match","reader","FileReader","onload","evt","result","createThumbnails","readAsDataURL","uploadImage","video","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","push","toDataURL","onUploadMovie","params","FormData","append","post","then","response","console","log"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\UploadMovie.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"input-area\">\r\n      <label for=\"input-video\">{{ isLoading ? '読み込み中...' : '動画を選択'}}</label>\r\n      <input id=\"input-video\" type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n      <!-- <button @click='onUploadMovie'>submit</button> -->\r\n      <video controls v-if=\"src\" @click=\"clip\">\r\n        <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n      </video>\r\n      <button @click='uploadImage'>このシーンをインポート</button>\r\n      <img class=\"imported-image\" :key=\"image\" :src=\"image\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://127.0.0.1:5000'\r\nexport default {\r\n  data () {\r\n    return {\r\n      src: '',\r\n      canvas: {},\r\n      image: '',\r\n      isLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    // ファイルのチェックと読み込み\r\n    handleFileSelect(event) {  \r\n      // ファイルのチェック\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n      // ファイルの読み込み\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        this.createThumbnails(this.src)\r\n        this.isLoading = false\r\n      }\r\n      reader.readAsDataURL(file)\r\n      this.isLoading = true\r\n    },\r\n    uploadImage() {\r\n      const video = document.createElement('video')\r\n      const canvas = document.createElement('canvas')\r\n      const context = canvas.getContext('2d')\r\n\r\n      canvas.width = video.videoWidth\r\n      canvas.height = video.videoHeight\r\n\r\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n      this.image.push(canvas.toDataURL('image/jpeg'))\r\n    },\r\n    // 動画をサーバーへアップロード\r\n    onUploadMovie () {\r\n      var params = new FormData()\r\n      params.append('video', this.src)\r\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\r\n      axios.post(`${API_URL}/classification`, params).then(function (response) {\r\n        console.log(response)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.input-area {\r\n  background: #20262E;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  transition: all 0.2s;\r\n}\r\n\r\ninput {\r\n  display: none;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  color: #ccc;\r\n  border: 2px dashed #ccc;\r\n  background: #eee;\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease-out;\r\n}\r\n\r\nlabel:hover {\r\n  background: #fafafa;\r\n  padding: 20px 10px;\r\n}\r\n\r\nvideo {\r\n  display: block;\r\n  max-width: 50%;\r\n  margin: 10px auto;\r\n}\r\n\r\n.thumbnail {\r\n  width: 20%;\r\n  height: 20%;\r\n  box-sizing: border-box;\r\n  border: 4px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.thumbnail-list.active {\r\n  border: 4px solid #06c;\r\n}\r\n\r\n.thumbnail-list:not(.active):hover {\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}