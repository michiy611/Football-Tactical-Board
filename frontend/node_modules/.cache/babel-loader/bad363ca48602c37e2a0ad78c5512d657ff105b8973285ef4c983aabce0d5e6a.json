{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-66939c3f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-area\",\n  for: \"input-video\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  controls: \"\",\n  id: \"video\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Capture this moment!!!\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"label\", _hoisted_1, _toDisplayString($data.isLoading ? 'Loading...' : 'Upload Video'), 1 /* TEXT */), _createElementVNode(\"input\", {\n    id: \"input-video\",\n    type: \"file\",\n    accept: \"video/mp4,video/x-m4v\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), $data.src ? (_openBlock(), _createElementBlock(\"video\", _hoisted_2, [_createElementVNode(\"source\", {\n    src: $data.src,\n    type: \"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\"\n  }, null, 8 /* PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"a\", {\n    class: \"btn uploadbtn\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.onUploadImage())\n  }, _hoisted_5)]);\n}","map":{"version":3,"mappings":";;;EAEWA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;;EAEvBC,QAAQ,EAAR,EAAQ;EAAYC,EAAE,EAAC;;;gEAGoBC,oBAAmC,cAA7B,wBAAsB;oBAA5BC,UAAmC;;uBANvFC,oBAOM,cANJF,oBAAkG,SAAlGG,UAAkG,mBAAnDC,eAAS,kDACxDJ,oBAA8F;IAAvFD,EAAE,EAAC,aAAa;IAACM,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,uBAAuB;IAAEC,QAAM,yCAAEC,+DAAgB;qCACtEJ,SAAG,kBAAzBF,oBAEQ,SAFRO,UAEQ,GADNT,oBAAqE;IAA5DU,GAAG,EAAEN,SAAG;IAAEC,IAAI,EAAC;8EAE1BL,oBAAyF;IAAtFJ,KAAK,EAAC,eAAe;IAAEe,OAAK,sCAAEH,sBAAa","names":["class","for","controls","id","_createElementVNode","_hoisted_4","_createElementBlock","_hoisted_1","$data","type","accept","onChange","$options","_hoisted_2","src","onClick"],"sourceRoot":"","sources":["C:\\Users\\20t333\\Documents\\実験2\\Football-Tactical-Board\\frontend\\src\\components\\CreateImage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label class=\"input-area\" for=\"input-video\">{{ isLoading ? 'Loading...' : 'Upload Video'}}</label>\r\n    <input id=\"input-video\" type=\"file\" accept=\"video/mp4,video/x-m4v\" @change=\"handleFileSelect\">\r\n    <video controls v-if=\"src\" id=\"video\">\r\n      <source :src=\"src\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n    </video>\r\n    <a class=\"btn uploadbtn\" @click=\"onUploadImage()\"><span>Capture this moment!!!</span></a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://127.0.0.1:5000'\r\n\r\nexport default {\r\n  // delimiters: ['[[', ']]'],\r\n  // props: ['results'],\r\n  data() {\r\n    return {\r\n      src: null,\r\n      image: [],\r\n      time: 0,\r\n      isLoading: false,\r\n      uploadedImage: '',\r\n      results: []\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileSelect(event) {\r\n      // reset data\r\n      this.src = null\r\n      // this.thumbnails = []\r\n      this.selected = 0\r\n      \r\n      // varidate file\r\n      const file = event.target.files[0]\r\n      if (!file || !file.type.match('video/*')) return\r\n\r\n      // read file\r\n      const reader = new FileReader()\r\n      reader.onload = (evt) => {\r\n        this.src = evt.target.result\r\n        this.isLoading = false\r\n      }\r\n      reader.readAsDataURL(file)\r\n      this.isLoading = true\r\n    },\r\n    // 動画を停止してその時点での画像を取得\r\n    onUploadImage() {\r\n      let self = this\r\n      this.image = []\r\n      const canvas = document.createElement('canvas')\r\n      const context = canvas.getContext('2d')\r\n      const video = document.getElementById(\"video\")\r\n\r\n      canvas.width = video.videoWidth\r\n      canvas.height = video.videoHeight\r\n      this.time = video.currentTime\r\n      // console.log(Math.ceil(this.time))\r\n      video.pause()\r\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n      this.image.push(canvas.toDataURL('image/png'))\r\n\r\n      // let reader = new FileReader()\r\n      // reader.onload = (e) => {\r\n      //   this.uploadedImage = e.target.result\r\n      // }\r\n\r\n      // console.log(this.uploadedImage)\r\n      // reader.readAsDataURL(this.image)\r\n\r\n      // 画像をサーバーへアップロード\r\n      var params = new FormData()\r\n      params.append('image', this.image)\r\n      // params.append('image', this.uploadedImage)\r\n      // Axiosを用いてFormData化したデータをFlaskへPostしています。\r\n      axios.post(`${API_URL}/detect`, params).then(function (response) {\r\n        self.results = response.data.results;\r\n        for (const result of self.results) {\r\n          console.log(result)\r\n        }\r\n        self.$emit('my-click', self.results)\r\n      })\r\n\r\n      // this.$parent.results = this.results\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.input-area {\r\n  background: #20262E;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  transition: all 0.2s;\r\n  width: 60%;\r\n}\r\n\r\ninput {\r\n  display: none;\r\n  text-align: center;\r\n}\r\n\r\nlabel {\r\n  font-size: 2em;\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  color: #ccc;\r\n  border: 2px dashed #ccc;\r\n  background: #eee;\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease-out;\r\n}\r\n\r\nlabel:hover {\r\n  background: #fafafa;\r\n  padding: 20px 10px;\r\n}\r\n\r\nvideo {\r\n  display: block;\r\n  max-width: 50%;\r\n  margin: 10px auto;\r\n}\r\n\r\n.btn\r\n{\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 1rem 4rem;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  -webkit-transition: all 0.3s;\r\n  transition: all 0.3s;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  text-decoration: none;\r\n  letter-spacing: 0.1em;\r\n  color: #212529;\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.uploadbtn {\r\n  overflow: hidden;\r\n\r\n  padding: 1.5rem 6rem;\r\n\r\n  color: #fff;\r\n  border-radius: 0;\r\n  background: #000;\r\n}\r\n\r\n.uploadbtn span {\r\n  position: relative;\r\n}\r\n\r\n.uploadbtn:before {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100px;\r\n  height: 100px;\r\n\r\n  content: '';\r\n  -webkit-transition: all .5s ease-in-out;\r\n  transition: all .5s ease-in-out;\r\n  -webkit-transform: translateX(-80%) translateY(-25px);\r\n  transform: translateX(-80%) translateY(-25px);\r\n\r\n  border-radius: 50%;\r\n  background: #eb6100;\r\n}\r\n\r\n.uploadbtn:hover:before {\r\n  width: 400px;\r\n  height: 400px;\r\n\r\n  -webkit-transform: translateX(-1%) translateY(-175px);\r\n\r\n  transform: translateX(-1%) translateY(-175px);\r\n}\r\n\r\n.image {\r\n  width: 30%;\r\n}\r\n\r\n.thumbnail {\r\n  width: 20%;\r\n  height: 20%;\r\n  box-sizing: border-box;\r\n  border: 4px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n/* .thumbnail-list.active {\r\n  border: 4px solid #06c;\r\n} */\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}