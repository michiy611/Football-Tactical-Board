version: '3'
services:
  flask:
    build: 
      context: .
      dockerfile: Dockerfile_python
    container_name: flask_container
    tty: true
    volumes:
      - ./:/usr/src/app
    ports:
      - "5000:5000"
  vue:
    build:
      context: .
      dockerfile: Dockerfile_node
    container_name: vue_container
    tty: true
    volumes:
      - ./:/usr/src/app
    ports:
      - "8080:8080"

# version: '3.8'
# services:
#   flask:
#     image: python:alpine
#     container_name: flask # サービスと一緒の名前
#     build:
#       context: ./flask # Dockerfileのパス
#       dockerfile: Dockerfile # Dockerfileの名前
#     volumes:
#       - ./flask/app:/app # マウント(コンテナの中とマシンのファイルを同期)
#     ports:
#       - 3000:3000 # ポートフォワーディング（コンテナのポートとローカルのポートを同期）
#     # depends_on: # 記述してあるコンテナが立ち上がってから起動
#     #   # mysql: # 中身のアプリが起動しているかどうかのhealthcheckが必要な場合も
#     #   #   condition: services_healthy
#     #   - mysql
  
#   # mysql:
#   #   image: mysql:latest
#   #   # command: --default-authenticaction-plugin=mysql_native_password
#   #   container_name: mysql
#   #   build:
#   #     context: ./mysql # Dockerfileのパス
#   #     dockerfile: Dockerfile
#   #   volumes:
#   #     - ./mysql/initdb.d:/docker-entrypoint-initdb.d
#   #     - ./mysql/db:/var/lib/mysql
#   #   environment:
#   #     MYSQL_ROOT_PASSWORD: password
#   #     MYSQL_DATABASE: epc_db
#   #     MYSQL_USER: 20t333
#   #     MYSQL_PORT: 3306 # 3306が一般的
#   #   ports:
#   #     - "3306:3306"
#     # healthcheck: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD

#     vue:
#       image: node:8.16.0-alpine
#       container_name: vue
#       build:
#         context: ./vue
#         dockerfile: Dockerfile
#       volumes: 
#         - ./flask/app:/app
#       ports: 
#         - "8080:8080"

